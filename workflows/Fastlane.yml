name: Archive

on:
  workflow_call:
    inputs:
      lane_name:
        required: true
        type: string
      fetch_depth:
        required: false
        type: number

jobs:
  main:
    runs-on: macos-latest
    timeout-minutes: 30
    steps:
    - name: Git - Checkout
      if: inputs.fetch_depth == ''
      uses: actions/checkout@v3
      with:
        ref: ${{ github.ref }}
    - name: Git - Checkout
      if: inputs.fetch_depth != ''
      uses: actions/checkout@v3
      with:
        ref: ${{ github.ref }}
        fetch-depth: ${{ inputs.fetch_depth }}
    - name: Setup - Environment Variables
      uses: tw3lveparsecs/github-actions-set-variables@v0.1
      with:
        envFilePath: .github/env/github_action.env
    - name: Setup - Xcode
      run: sudo xcode-select -s /Applications/Xcode_13.2.1.app
    - name: Setup - Ruby and bundler dependencies
      uses: ruby/setup-ruby@v1.57.0
      with:
        ruby-version: ${{ env.RUBY_VERSION }}
        bundler-cache: true
    - name: Setup - SSH Agent
      uses: webfactory/ssh-agent@v0.5.4
      with:
        ssh-private-key: |
          ${{ secrets.FASTFILE_SSH_PRIVATE_KEY }}
          ${{ secrets.MATCH_SSH_PRIVATE_KEY }}
    - name: Cache - CocoaPods
      uses: actions/cache@v2
      with:
        path: Pods
        key: ${{ runner.os }}-pods-${{ hashFiles('**/Podfile.lock') }}
        restore-keys: |
          ${{ runner.os }}-pods-
    - name: Cache - Carthage
      uses: actions/cache@v2
      with:
        path: Carthage
        key: ${{ runner.os }}-carthage-${{ hashFiles('**/Cartfile.resolved') }}
        restore-keys: |
          ${{ runner.os }}-carthage-
    - name: Cache - Swift Pachage Manager
      uses: actions/cache@v2
      with:
        path: .build
        key: ${{ runner.os }}-spm-${{ hashFiles('**/Package.resolved') }}
        restore-keys: |
          ${{ runner.os }}-spm-
    - name: Fastlane - Archive
      uses: maierj/fastlane-action@v2.0.1
      env:
        RUN_ID: ${{ github.run_id }}
        GITHUB_REPOSITORY: ${{ github.repository }}
      with:
        lane: ${{ inputs.lane_name }}
